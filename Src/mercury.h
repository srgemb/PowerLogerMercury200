
#ifndef __MERCURY_H
#define __MERCURY_H

#include <stdint.h>
#include <stdbool.h>

//****************************************************************************************************************
// Коды запросов данных для счетчика Меркурий 200.2
//****************************************************************************************************************
#define INSTANTVAL          0x63        //мгновенные значения P,I,V
#define VERSION             0x28        //версия счетчика
#define SERIALNUM           0x2F        //серийный номер
#define DATEPROD            0x66        //дата выпуск счетчика
#define LASTON              0x2C        //дата последнего включения
#define LASTOFF             0x2B        //дата последнего выключения
#define POWERTAR            0x27        //накопленное значение мощности по тарифам
#define DATETIME            0x21        //дата время часов счетчика
#define NOANSWER            0x00

#pragma pack( push, 1 )

//****************************************************************************************************************
// Структура обмена данными со счетчиком Меркурий 200.2
//****************************************************************************************************************
//Запрос данных
typedef struct {
    uint32_t num_dev;                   //номер счетчика
    uint8_t  command;                   //код команды
    uint16_t crc;                       //контрольная сумма
 } MERC_REQUEST;

//Ответ - мгновенные значения ток, напряжение, мощность
typedef struct {
    uint32_t num_dev;                   //номер счетчика (эхо команды)
    uint8_t  command;                   //код команды (эхо команды)
    uint16_t crc;                       //контрольная сумма (эхо команды)
    uint32_t num_dev2;                  //номер счетчика
    uint8_t  command2;                  //код команды
    uint16_t voltage;                   //мгновенное значение напряжения сети
    uint16_t current;                   //мгновенное значение тока в нагрузке
    uint8_t  power[3];                  //мгновенное значение мощности потребления
    uint16_t crc_answer;                //контрольная сумма
 } MERC_INST_VAL;

//Ответ - расход электроэнергии по тарифам
typedef struct {
    uint32_t num_dev;                   //номер счетчика (эхо команды)
    uint8_t  command;                   //код команды (эхо команды)
    uint16_t crc;                       //контрольная сумма (эхо команды)
    uint32_t num_dev2;                  //номер счетчика
    uint8_t  command2;                  //код команды
    uint32_t tariff1;                   //Тариф 1 - день
    uint32_t tariff2;                   //Тариф 2 - ночь
    uint32_t tariff3;                   //Тариф 3
    uint32_t tariff4;                   //Тариф 4
    uint16_t crc_answer;                //контрольная сумма
 } MERC_TARIFF;

#pragma pack( pop )

#endif
